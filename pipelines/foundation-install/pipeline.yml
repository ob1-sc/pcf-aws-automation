---
resources:

- name: tf-state
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((tf_state_bucket))
    versioned_file: terraform.tfstate

- name: tools-texplate
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: tools/texplate-(.*)

- name: tools-jq
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: tools/jq-(.*)

- name: pcf-automation-tasks
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: .*tasks-(.*).zip

- name: pcf-automation-image
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: .*image-(.*).tgz

# - name: installation
#   type: s3
#   source:
#     access_key_id: ((s3.access_key_id))
#     bucket: ((s3.buckets.installation))
#     region_name: ((s3.region_name))
#     secret_access_key: ((s3.secret_access_key))
#     versioned_file: installation.zip

- name: opsman-image
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: OpsManager(.*)onAWS.yml

- name: pas-stemcell
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: pas-stemcell/light-bosh-stemcell-(.*)-aws.*\.tgz

- name: pas-product
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: cf-(.*).pivotal

# configurations
- name: pcf-aws-automation
  type: git
  source:
    private_key: ((git-key.private_key))
    uri: ((automation_repo))
    branch: master

jobs:

- name: install-opsman
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: opsman-image
    - get: pcf-aws-automation

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca.certificate))
      PREFIX: '/'
      INTERPOLATION_PATH: 'config/product/vars'
    input_mapping:
      files: pcf-aws-automation
    output_mapping:
      interpolated-files: pcf-aws-automation-interpolated

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca.certificate))
      PREFIX: '/'
      INTERPOLATION_PATH: 'config/environment'
    input_mapping:
      files: pcf-aws-automation
    output_mapping:
      interpolated-files: env-interpolated

  - task: create-vm
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/create-vm.yml
    input_mapping:
      image: opsman-image
      state: pcf-aws-automation
      config: pcf-aws-automation-interpolated
    params:
      OPSMAN_CONFIG_FILE: config/product/vars/opsman.yml
      STATE_FILE: state/opsman.yml
    ensure: &make-state-commit
      do:
        - task: make-commit
          image: pcf-automation-image
          file: pcf-automation-tasks/tasks/make-git-commit.yml
          input_mapping:
            repository: pcf-aws-automation
            file-source: generated-state
          output_mapping:
            repository-commit: configuration-commit
          params:
            FILE_SOURCE_PATH: opsman.yml
            FILE_DESTINATION_PATH: state/opsman.yml
            GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
            GIT_AUTHOR_NAME: "PCF Automation Bot"
            COMMIT_MESSAGE: 'Update state file'
        - put: pcf-aws-automation
          params:
            repository: configuration-commit
            merge: true

  - task: configure-authentication
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/configure-authentication.yml
    attempts: 10
    input_mapping:
      env: env-interpolated
      config: pcf-aws-automation-interpolated
    params:
      ENV_FILE: config/environment/env.yml
      AUTH_CONFIG_FILE: config/product/vars/opsman-auth.yml

- name: install-director
  serial: true
  plan:
    - aggregate:
      - get: pcf-automation-image
        params:
          unpack: true
        passed:
        - install-opsman
        trigger: true
      - get: pcf-automation-tasks
        params:
          unpack: true
      - get: pcf-aws-automation

    - task: credhub-interpolate
      image: pcf-automation-image
      file: pcf-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca.certificate))
        PREFIX: '/'
        INTERPOLATION_PATH: 'config/product/vars'
      input_mapping:
        files: pcf-aws-automation
      output_mapping:
        interpolated-files: pcf-aws-automation-interpolated

    - task: credhub-interpolate
      image: pcf-automation-image
      file: pcf-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca.certificate))
        PREFIX: '/'
        INTERPOLATION_PATH: 'config/environment'
      input_mapping:
        files: pcf-aws-automation
      output_mapping:
        interpolated-files: env-interpolated

    - task: configure-director
      image: pcf-automation-image
      file: pcf-automation-tasks/tasks/configure-director.yml
      input_mapping:
        config: pcf-aws-automation
        env: env-interpolated
        vars: pcf-aws-automation-interpolated
      params:
        VARS_FILES: vars/config/product/vars/director.yml
        ENV_FILE: config/environment/env.yml
        DIRECTOR_CONFIG_FILE: config/product/config/director.yml

    - task: apply-director-changes
      image: pcf-automation-image
      file: pcf-automation-tasks/tasks/apply-director-changes.yml
      input_mapping:
        env: env-interpolated
      params:
        ENV_FILE: config/environment/env.yml

- name: store-staged-director-config
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
      passed:
      - install-director
      trigger: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: pcf-aws-automation

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca.certificate))
      PREFIX: '/'
      INTERPOLATION_PATH: 'config/environment'
    input_mapping:
      files: pcf-aws-automation
    output_mapping:
      interpolated-files: pcf-aws-automation-interpolated

  - task: staged-director-config
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/staged-director-config.yml
    input_mapping:
      env: pcf-aws-automation-interpolated
    params:
      ENV_FILE: config/environment/env.yml

  - task: make-commit
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/make-git-commit.yml
    input_mapping:
      repository: pcf-aws-automation
      file-source: generated-config
    output_mapping:
      repository-commit: configuration-commit
    params:
      FILE_SOURCE_PATH: director.yml
      FILE_DESTINATION_PATH: state/director.yml
      GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
      GIT_AUTHOR_NAME: "PCF Automation Bot"
      COMMIT_MESSAGE: 'Update director config file'
  - put: pcf-aws-automation
    params:
      repository: configuration-commit
      merge: true

- name: upload-and-stage-pas
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
      passed:
      - store-staged-director-config
      trigger: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: pcf-aws-automation
    - get: pas-product

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca.certificate))
      PREFIX: '/'
      INTERPOLATION_PATH: 'config/environment'
    input_mapping:
      files: pcf-aws-automation
    output_mapping:
      interpolated-files: env-interpolated

  - task: upload-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: pas-product
      env: env-interpolated
    params:
      ENV_FILE: config/environment/env.yml

  - task: stage-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: pas-product
      env: env-interpolated
    params:
      ENV_FILE: config/environment/env.yml

- name: upload-stemcell
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
      passed:
      - upload-and-stage-pas
      trigger: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: pcf-aws-automation
    - get: pas-stemcell

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca.certificate))
      PREFIX: '/'
      INTERPOLATION_PATH: 'config/environment'
    input_mapping:
      files: pcf-aws-automation
    output_mapping:
      interpolated-files: env-interpolated

  - task: upload-pas-stemcell
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: env-interpolated
      stemcell: pas-stemcell
    params:
      ENV_FILE: config/environment/env.yml

- name: configure-pas
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
      passed:
      - upload-stemcell
      trigger: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: pcf-aws-automation
    - get: tools-texplate
    - get: tools-jq
    - get: tf-state

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca.certificate))
      PREFIX: '/'
      INTERPOLATION_PATH: 'config/product/vars'
    input_mapping:
      files: pcf-aws-automation
    output_mapping:
      interpolated-files: pcf-aws-automation-interpolated

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca.certificate))
      PREFIX: '/'
      INTERPOLATION_PATH: 'config/environment'
    input_mapping:
      files: pcf-aws-automation
    output_mapping:
      interpolated-files: env-interpolated

  - task: tfstate-interpolate
    image: pcf-automation-image
    file: pcf-aws-automation/tasks/tfstate-interpolate/task.yml
    input_mapping:
      tf_state: tf-state
      tasks: pcf-aws-automation
      texplate: tools-texplate
      jq: tools-jq
      files: pcf-aws-automation
    params:
      INTERPOLATION_PATH: config/product/config/pas.yml
    output_mapping:
      interpolated-files: config-interpolated

  - task: configure-pas-vm-exts
    image: pcf-automation
    file: pcf-aws-automation/tasks/config-pas-vm-exts/task.yml
    input_mapping:
      env: env-interpolated
      tasks: pcf-aws-automation
    params:
      ENV_FILE: config/environment/env.yml

  - task: configure-pas
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: config-interpolated
      env: env-interpolated
      vars: pcf-aws-automation-interpolated
    params:
      VARS_FILES: vars/config/product/vars/pas.yml
      ENV_FILE: config/environment/env.yml
      CONFIG_FILE: config/product/config/pas.yml

- name: apply-product-changes
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
      passed:
      - configure-pas
      trigger: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: pcf-aws-automation

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca.certificate))
      PREFIX: '/'
      INTERPOLATION_PATH: 'config/environment'
    input_mapping:
      files: pcf-aws-automation
    output_mapping:
      interpolated-files: env-interpolated

  - task: apply-product-changes
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: env-interpolated
    params:
      ENV_FILE: config/environment/env.yml