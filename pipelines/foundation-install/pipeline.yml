---
resources:

- name: pcf-automation-tasks
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: .*tasks-(.*).zip

- name: pcf-automation-image
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: .*image-(.*).tgz

# - name: installation
#   type: s3
#   source:
#     access_key_id: ((s3.access_key_id))
#     bucket: ((s3.buckets.installation))
#     region_name: ((s3.region_name))
#     secret_access_key: ((s3.secret_access_key))
#     versioned_file: installation.zip

- name: opsman-image
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((aws_region))
    bucket: ((artifacts_bucket))
    regexp: OpsManager(.*)onAWS.yml

# configurations
- name: pcf-aws-automation
  type: git
  source:
    private_key: ((git-key.private_key))
    uri: ((automation_repo))
    branch: master

jobs:

- name: install-opsman
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: opsman-image
    - get: pcf-aws-automation
  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca))
      PREFIX: '/'
      INTERPOLATION_PATH: 'config/product'
    input_mapping:
      files: pcf-aws-automation
    output_mapping:
      interpolated-files: pcf-aws-automation-interpolated
  - task: create-vm
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/create-vm.yml
    input_mapping:
      image: opsman-image
      state: pcf-aws-automation
      config: pcf-aws-automation-interpolated
    params:
      OPSMAN_CONFIG_FILE: config/product/opsman.yml
      STATE_FILE: state/opsman.yml
    ensure: &make-state-commit
      do:
        - task: make-commit
          image: pcf-automation-image
          file: pcf-automation-tasks/tasks/make-git-commit.yml
          input_mapping:
            repository: pcf-aws-automation
            file-source: generated-state
          output_mapping:
            repository-commit: configuration-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: state/opsman.yml
            GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
            GIT_AUTHOR_NAME: "PCF Automation Bot"
            COMMIT_MESSAGE: 'Update state file'
        - put: pcf-aws-automation
          params:
            repository: configuration-commit
            merge: true